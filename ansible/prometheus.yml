---
- name: Retrieve SSH private key from AWS Secrets Manager.
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Retrieve the key from AWS Secrets Manager.
      set_fact:
        secret_data: "{{ lookup('amazon.aws.secretsmanager_secret', 'aws-ec2-ssh-key') }}"
      no_log: true
    - name: Retrieve the private key from the secret data.
      set_fact:
        ssh_private_key: "{{ secret_data.private_key }}"
      no_log: true
    - name: Gather EC2 tags.
      amazon.aws.ec2_instance_info:
      register: ec2_instance_info
    - name: Add seconadry server addresses to array.
      set_fact:
        prometheus_secondaries: "{{ prometheus_secondaries | default([]) + [item.private_dns_name] }}"
      when: "'secondary' in item.tags['role']"
      with_items: "{{ ec2_instance_info.instances }}"
    - name: Set variable containing primary server instance ID.
      set_fact:
        prometheus_primary: "{{ prometheus_primary | default([]) + [item.instance_id] }}"
      when: "'primary' in item.tags['role']"
      with_items: "{{ ec2_instance_info.instances }}"

- name: Run preconfiguration tasks.
  hosts: all
  gather_facts: true
  become: true
  vars:
    ansible_ssh_private_key: "{{ hostvars['localhost'].ssh_private_key }}"
    ansible_user: "ubuntu"
  tasks:
    - name: Update Apt package index.
      apt:
        update_cache: true
    - name: Upgrade Apt packages.
      apt:
        upgrade: dist

- name: Deploy Prometheus.
  hosts: all
  gather_facts: true
  roles:
    - prometheus.prometheus.prometheus
  become: true
  vars_files:
    - ./vars/default.yml
  vars:
    ansible_ssh_private_key: "{{ hostvars['localhost'].ssh_private_key }}"
    ansible_user: "ubuntu"
    prometheus_secondaries: "{{ hostvars['localhost'].prometheus_secondaries }}"
    prometheus_primary: "{{ hostvars['localhost'].prometheus_primary[0] }}"
    prometheus_version: "{{ prometheus_version }}"
  tasks:
    - name: Gather EC2 metadata facts
      amazon.aws.ec2_metadata_facts:
    - name: Render node scrape configuration.
      template:
        src: templates/prometheus_node_config.yml.j2
        dest: /etc/prometheus/file_sd/node.yml
      notify:
        - prometheus_service
    - name: Render federated scrape configuration.
      template:
        src: templates/prometheus_federate_config.yml.j2
        dest: /etc/prometheus/scrape_configs/prometheus_federate_config.yml
      notify:
        - prometheus_service
      when: ansible_ec2_instance_id == prometheus_primary
  handlers:
    - name: prometheus_service
      systemd:
        name: prometheus
        state: reloaded
        daemon_reload: yes

- name: Deploy Node Exporter.
  hosts: all
  gather_facts: true
  roles:
    - prometheus.prometheus.node_exporter
  become: true
  vars_files:
    - ./vars/default.yml
  vars:
    ansible_ssh_private_key: "{{ hostvars['localhost'].ssh_private_key }}"
    ansible_user: "ubuntu"
    node_exporter_version: "{{ prometheus_node_exporter_version }}"

